import java.util.Arrays;
import java.util.Objects;
import java.util.Scanner;

public class Board {
    private final Piece[][] grid = new Piece[4][4];

    public boolean placePiece(int row, int col, Piece piece) {
        if (row < 0 || row >= 4 || col < 0 || col >= 4 || grid[row][col] != null)
            return false;
        grid[row][col] = piece;
        return true;
    }

    public boolean checkWin() {
        for (int i = 0; i < 4; i++) {
            if (checkLine(grid[i][0], grid[i][1], grid[i][2], grid[i][3])) return true;
            if (checkLine(grid[0][i], grid[1][i], grid[2][i], grid[3][i])) return true;
        }
        return checkLine(grid[0][0], grid[1][1], grid[2][2], grid[3][3]) ||
               checkLine(grid[0][3], grid[1][2], grid[2][1], grid[3][0]);
    }

    private boolean checkLine(Piece p1, Piece p2, Piece p3, Piece p4) {
        if (p1 == null || p2 == null || p3 == null || p4 == null) return false;

        boolean sameHeight = p1.getHeight() == p2.getHeight() &&
                             p2.getHeight() == p3.getHeight() &&
                             p3.getHeight() == p4.getHeight();

        boolean sameColor = p1.getColor() == p2.getColor() &&
                            p2.getColor() == p3.getColor() &&
                            p3.getColor() == p4.getColor();

        boolean sameShape = p1.getShape() == p2.getShape() &&
                            p2.getShape() == p3.getShape() &&
                            p3.getShape() == p4.getShape();

        boolean sameFill = p1.getFill() == p2.getFill() &&
                           p2.getFill() == p3.getFill() &&
                           p3.getFill() == p4.getFill();

        return sameHeight || sameColor || sameShape || sameFill;
    }

    public void printBoard() {
        for (Piece[] row : grid) {
            for (Piece p : row) {
                System.out.print((p == null ? "[   ]" : "[X]") + " ");
            }
            System.out.println();
        }
    }
}
