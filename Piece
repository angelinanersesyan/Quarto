public enum Color {LIGHT, DARK}
public enum Shape {ROUND, SQUARE}
public enum Fill {SOLID, HOLLOW}
public enum Height {TALL, SHORT} 

public class Piece{
    private Color color;
    private Shape shape;
    private Fill fill;
    private Height height;

 //Constructor for initialization
public Piece(Color color, Shape shape, Fill fill, Height height){
    this.color = color;
    this.shape = shape;
    this.fill = fill;
    this.height = height;
}

//Getters for private attributes
public Color getColor(){
    return color;
}
public Shape getShape(){
    return shape;
}
public Fill getFill(){
    return fill;
}
public Height getHeight(){
    return height;
}
//Overriding toString method for clear representation of each piece
public String toString(){
return "[" + height + ", " + color + ", " + shape + ", " + fill + "]";
}

//Checking method for common/winnging attributes
public static boolean sharingCommonAttr(Piece[] pieces){
    if (pieces.length != 4)
        return false;
    boolean sameHeight = pieces[0].height == pieces[1].height &&
                         pieces[1].height == pieces[2].height &&
                         pieces[2].height == pieces[3].height;

    boolean sameColor = pieces[0].color == pieces[1].color &&
                         pieces[1].color == pieces[2].color &&
                         pieces[2].color == pieces[3].color;

    boolean sameShape = pieces[0].shape == pieces[1].shape &&
                         pieces[1].shape == pieces[2].shape &&
                         pieces[2].shape == pieces[3].shape;

    boolean sameFill = pieces[0].fill == pieces[1].fill &&
                         pieces[1].fill == pieces[2].fill &&
                         pieces[2].fill == pieces[3].fill;
}
    return sameHeight || sameColor || sameShape || sameFill;


}
